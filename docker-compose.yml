version: '3.8'

services:
  zookeeper:
    image: 'confluentinc/cp-zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "2181" ]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - app-network

  kafka:
    image: 'confluentinc/cp-kafka:latest'
    ports:
      - '29092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:29092
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      ALLOW_PLAINTEXT_LISTENER: "yes"
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9092"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - app-network

  kafka-ui:
    image: 'provectuslabs/kafka-ui:latest'
    ports:
      - '8080:8080'
    restart: always
    environment:
      KAFKA_CLUSTERS_0_NAME: "local"
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: "kafka:9092"
      DYNAMIC_CONFIG_ENABLED: "true"
    depends_on:
      - kafka
    networks:
      - app-network

  producer:
    build:
      context: .
      dockerfile: producer/Dockerfile
    ports:
      - '8081:8081'
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - app-network

  consumer:
    build:
      context: .
      dockerfile: consumer/Dockerfile
    ports:
      - '8082:8082'
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
